/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagement;
import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author aswin
 */
public class Amount extends javax.swing.JFrame {

    /**
     * Creates new form Amount
     */
    public Amount() {
        initComponents();
        fetch();
        clear();
        jScrollPane1.getViewport().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        category = new javax.swing.ButtonGroup();
        type = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AmountTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        single = new javax.swing.JRadioButton();
        doub = new javax.swing.JRadioButton();
        family = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        ac = new javax.swing.JRadioButton();
        non = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        AAmount = new javax.swing.JTextField();
        RAdd = new javax.swing.JButton();
        RUpdate = new javax.swing.JButton();
        RDelete = new javax.swing.JButton();
        RNext = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setOpaque(false);

        AmountTable.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        AmountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Type", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        AmountTable.setRowHeight(22);
        AmountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AmountTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AmountTable);

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel3.setText("Category :");

        category.add(single);
        single.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        single.setText("Single");

        category.add(doub);
        doub.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        doub.setText("Double");

        category.add(family);
        family.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        family.setText("Family");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel2.setText("Type :");

        type.add(ac);
        ac.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        ac.setText("AC");

        type.add(non);
        non.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        non.setText("NON-AC");

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setText("Rent :");

        AAmount.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        AAmount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        RAdd.setBackground(new java.awt.Color(255, 186, 85));
        RAdd.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        RAdd.setForeground(new java.awt.Color(51, 0, 51));
        RAdd.setText("ADD");
        RAdd.setPreferredSize(new java.awt.Dimension(82, 22));
        RAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAddActionPerformed(evt);
            }
        });

        RUpdate.setBackground(new java.awt.Color(255, 186, 85));
        RUpdate.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        RUpdate.setForeground(new java.awt.Color(51, 0, 51));
        RUpdate.setText("UPDATE");
        RUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RUpdateActionPerformed(evt);
            }
        });

        RDelete.setBackground(new java.awt.Color(255, 186, 85));
        RDelete.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        RDelete.setForeground(new java.awt.Color(51, 0, 51));
        RDelete.setText("DELETE");
        RDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDeleteActionPerformed(evt);
            }
        });

        RNext.setBackground(new java.awt.Color(255, 186, 85));
        RNext.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        RNext.setForeground(new java.awt.Color(51, 0, 51));
        RNext.setText("HOME");
        RNext.setPreferredSize(new java.awt.Dimension(82, 22));
        RNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(ac)
                                .addGap(18, 18, 18)
                                .addComponent(non))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(doub)
                                    .addComponent(single)
                                    .addComponent(family)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(AAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(253, 253, 253)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(RAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RNext, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(single))
                        .addGap(3, 3, 3)
                        .addComponent(doub)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(family)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ac)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(non))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1))
                            .addComponent(AAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(357, 357, 357))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 750, 740));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/amount.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RUpdateActionPerformed
        // TODO add your handling code here:
        String Category;
        String Type;
        try{
            DefaultTableModel d1=(DefaultTableModel)AmountTable.getModel();
            int index=Integer.parseInt(d1.getValueAt(AmountTable.getSelectedRow(),0).toString());
            if(single.isSelected()){
                Category="Single";
            }
            else if(doub.isSelected()){
                Category="Double";
            }
            else{
                Category="Family";
            }
            if(ac.isSelected()){
                Type="AC";
            }
            else{
                Type="NON-AC";
            }
            int Amount=Integer.parseInt(AAmount.getText());
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
            String sql="update Amount set Category='"+Category+"',Type='"+Type+"',Rate='"+Amount+"' where ID='"+index+"'";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.executeUpdate(sql);
            fetch();
            clear();
            JOptionPane.showMessageDialog(null, "Updated");
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_RUpdateActionPerformed

    private void RDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDeleteActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel d1=(DefaultTableModel)AmountTable.getModel();
            int index=Integer.parseInt(d1.getValueAt(AmountTable.getSelectedRow(),0).toString());
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
            String sql="DELETE FROM Amount WHERE ID='"+index+"'";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.executeUpdate(sql);
            fetch();
            clear();
            JOptionPane.showMessageDialog(null, "Deleted");
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_RDeleteActionPerformed

    private void RAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAddActionPerformed
        // TODO add your handling code here:

        try{
            String Category;
            if(single.isSelected()){
                Category="Single";
            }
            else if(doub.isSelected()){
                Category="Double";
            }
            else{
                Category="Family";
            }
            String Type;
            if(ac.isSelected()){
                Type="AC";
            }
            else{
                Type="NON-AC";
            }
            int Amount=Integer.parseInt(AAmount.getText());
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
            String sql="INSERT INTO Amount(Category,Type,Rate)VALUES('"+Category+"','"+Type+"','"+Amount+"');";
            Statement st=con.createStatement();
            int rs=st.executeUpdate(sql);
            if(rs==1){
                JOptionPane.showMessageDialog(this,"Data Added");
                fetch();
                clear();
            }

        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_RAddActionPerformed

    private void RNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RNextActionPerformed
        // TODO add your handling code here:

        Dashboard d=new Dashboard();
        d.show();
        dispose();
    }//GEN-LAST:event_RNextActionPerformed

    private void AmountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AmountTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1=(DefaultTableModel)AmountTable.getModel();
        int index=AmountTable.getSelectedRow();
        if(d1.getValueAt(index,1).toString().equals("Single")){
            single.setSelected(true);
        }else if(d1.getValueAt(index,1).toString().equals("Double")){
            doub.setSelected(true);
        }else{
            family.setSelected(true);
        }
        if(d1.getValueAt(index,2).toString().equals("AC")){
            ac.setSelected(true);
        }
        else{
            non.setSelected(true);
        }
        AAmount.setText(d1.getValueAt(index, 3).toString());
    }//GEN-LAST:event_AmountTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Amount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Amount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Amount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Amount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Amount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AAmount;
    private javax.swing.JTable AmountTable;
    private javax.swing.JButton RAdd;
    private javax.swing.JButton RDelete;
    private javax.swing.JButton RNext;
    private javax.swing.JButton RUpdate;
    private javax.swing.JRadioButton ac;
    private javax.swing.ButtonGroup category;
    private javax.swing.JRadioButton doub;
    private javax.swing.JRadioButton family;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton non;
    private javax.swing.JRadioButton single;
    private javax.swing.ButtonGroup type;
    // End of variables declaration//GEN-END:variables

    private void fetch() {
        try{
           Class.forName("com.mysql.cj.jdbc.Driver");
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
           String sql="select * from Amount";
           Statement stmt=con.createStatement();
           ResultSet rs=stmt.executeQuery(sql);
           DefaultTableModel d1=(DefaultTableModel)AmountTable.getModel();
           d1.setRowCount(0);
           while(rs.next())
           {
               
               Vector v2=new Vector();
                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("Category"));
                    v2.add(rs.getString("Type"));
                    v2.add(rs.getString("Rate"));
               d1.addRow(v2);
           }
       }
       catch(Exception e)
       {
           System.out.println(e);
       }
    }
    private void clear() {
        this.category.clearSelection();
        this.type.clearSelection();
        AAmount.setText("");
    }
}
