/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagement;
import java.awt.Color;
import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author aswin
 */
public class Booking extends javax.swing.JFrame {
    String cat,typ;
    /**
     * Creates new form Booking
     */
    public Booking() {
        initComponents();
        visiblity();
        fetch();
        clear();
        fetchC();
        jScrollPane1.getViewport().setBackground(Color.white);
        jScrollPane2.getViewport().setBackground(Color.white);
        jScrollPane4.getViewport().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Status = new javax.swing.ButtonGroup();
        category = new javax.swing.ButtonGroup();
        type = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        back = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Book = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        Change = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        Customer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Cus = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        avail = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        show = new javax.swing.JButton();
        res = new javax.swing.JRadioButton();
        not = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        roomno = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        phone = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(1440, 768));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        back.setOpaque(false);
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout backLayout = new javax.swing.GroupLayout(back);
        back.setLayout(backLayout);
        backLayout.setHorizontalGroup(
            backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        backLayout.setVerticalGroup(
            backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 50, 50));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Book.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        Book.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Room", "Name", "Phone No", "Address", "Category", "Room Type", "Check In"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Book.setRowHeight(22);
        Book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Book);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 940, 250));

        jLabel10.setFont(new java.awt.Font("Noto Sans Mono CJK JP", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(42, 60, 104));
        jLabel10.setText("BOOKING DETAILS :");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 436, 41));

        Change.setFont(new java.awt.Font("Noto Sans Mono CJK JP", 1, 36)); // NOI18N
        Change.setForeground(new java.awt.Color(42, 60, 104));
        jPanel2.add(Change, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 330, 50));

        add.setBackground(new java.awt.Color(42, 60, 104));
        add.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel2.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 650, 130, 46));

        update.setBackground(new java.awt.Color(42, 60, 104));
        update.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel2.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 650, 130, 46));

        delete.setBackground(new java.awt.Color(42, 60, 104));
        delete.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel2.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 650, 130, 46));

        Customer.setBackground(new java.awt.Color(255, 255, 255));
        Customer.setOpaque(false);

        Cus.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        Cus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Room", "Name", "Phone Number", "Address", "Check In", "Type", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Cus.setRowHeight(22);
        Cus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Cus);

        javax.swing.GroupLayout CustomerLayout = new javax.swing.GroupLayout(Customer);
        Customer.setLayout(CustomerLayout);
        CustomerLayout.setHorizontalGroup(
            CustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
            .addGroup(CustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 940, Short.MAX_VALUE))
        );
        CustomerLayout.setVerticalGroup(
            CustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
            .addGroup(CustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
        );

        jPanel2.add(Customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 940, 260));

        jScrollPane4.setOpaque(false);

        avail.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        avail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Room", "Type", "Category", "Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        avail.setRowHeight(22);
        avail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                availMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(avail);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 940, 260));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 980, 730));

        jPanel3.setOpaque(false);

        show.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        show.setText("Show Rooms");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        Status.add(res);
        res.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        res.setText("RESERVED");
        res.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resActionPerformed(evt);
            }
        });

        Status.add(not);
        not.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        not.setText("NOT RESERVED");
        not.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 51));
        jLabel8.setText("ROOM NO:");

        roomno.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        roomno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 51));
        jLabel6.setText("NAME :");

        name.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        name.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        phone.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        phone.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 51));
        jLabel4.setText("PHONE :");

        address.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        address.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 0, 51));
        jLabel9.setText("ADDRESS :");

        date.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        date.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 51));
        jLabel3.setText("CHECK IN:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(res)
                                .addGap(18, 18, 18)
                                .addComponent(not))
                            .addComponent(show))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomno, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(name)
                            .addComponent(phone)
                            .addComponent(jSeparator3)
                            .addComponent(address)
                            .addComponent(jSeparator4)
                            .addComponent(date)
                            .addComponent(jSeparator5))))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(not))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(res)))
                .addGap(18, 18, 18)
                .addComponent(show)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 330, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/booking (4).png"))); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(1448, 768));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resActionPerformed
        // TODO add your handling code here:
        Customer.setVisible(true);
        Change.setText("CUSTOMER INFO :");
        show.setVisible(false);
        fetchC();
    }//GEN-LAST:event_resActionPerformed

    private void notActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notActionPerformed
        // TODO add your handling code here:
        Customer.setVisible(false);
        Change.setText("AVAILABLE ROOMS :");
        show.setVisible(true);
    }//GEN-LAST:event_notActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        if(res.isSelected()){
            try{
                String Room=roomno.getText();
                String Name=name.getText();
                String Phone=phone.getText();
                String Address=address.getText();
                String Date=date.getText();
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
                String sql="INSERT INTO Bookings(Room,Name,PhnNo,Address,Category,Type,CheckIn)VALUES('"+Room+"','"+Name+"','"+Phone+"','"+Address+"','"+cat+"','"+typ+"','"+Date+"');";
                Statement st=con.createStatement();
                int rs=st.executeUpdate(sql);
                if(rs==1){
                    JOptionPane.showMessageDialog(this,"Data Added");
                    fetch();
                    clear();
                }

                String sql1="UPDATE Rooms SET Availability='BOOKED' WHERE Room='"+Room+"';";
                Statement st1=con.createStatement();
                int rs1=st1.executeUpdate(sql1);

                String sql2="DELETE FROM Reservation WHERE Room='"+Room+"'";
                Statement st2=con.createStatement();
                int rs2=st2.executeUpdate(sql2);

                String sql3="UPDATE CustomerInfo SET Type='BOOKED' WHERE Room='"+Room+"';";
                Statement st3=con.createStatement();
                int rs3=st3.executeUpdate(sql3);
                
                fetchC();
            }catch(Exception e){
                System.out.println(e);
            }
            
        }
        else if(not.isSelected())
        {
            
            try{
                String Room=roomno.getText();
                String Name=name.getText();
                String Phone=phone.getText();
                String Address=address.getText();
                String Date=date.getText();
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
                String sql="INSERT INTO Bookings(Room,Name,PhnNo,Address,Category,Type,CheckIn)VALUES('"+Room+"','"+Name+"','"+Phone+"','"+Address+"','"+cat+"','"+typ+"','"+Date+"');";
                Statement st=con.createStatement();
                int rs=st.executeUpdate(sql);
                if(rs==1){
                    JOptionPane.showMessageDialog(this,"Data Added");
                    fetch();
                    clear();
                }

                String sql1="UPDATE Rooms SET Availability='BOOKED' WHERE Room='"+Room+"';";
                Statement st1=con.createStatement();
                int rs1=st1.executeUpdate(sql1);
                
                String sql3="INSERT INTO CustomerInfo(Name,PhnNo,Address,Room,CheckIn,Type)VALUES('"+Name+"','"+Phone+"','"+Address+"','"+Room+"','"+Date+"','BOOKED')";
                Statement st3=con.createStatement();
                int rs3=st3.executeUpdate(sql3);
                
                fetchC();
            }
            
            catch(Exception e){
                System.out.println(e);
            }
                }
        else{
            JOptionPane.showMessageDialog(null, "Select Booking Type");
            
        }
        fetchR();
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel d1=(DefaultTableModel)Book.getModel();
            int index=Integer.parseInt(d1.getValueAt(Book.getSelectedRow(),0).toString());
            String Room=roomno.getText();
            String Name=name.getText();
            String Phone=phone.getText();
            String Date=date.getText();

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
            String sql="update Bookings set Room='"+Room+"',Name='"+Name+"',PhnNo='"+Phone+"',Category='"+cat+"',Type='"+typ+"',CheckIn='"+Date+"' where ID='"+index+"'";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.executeUpdate(sql);
            fetch();
            clear();
            JOptionPane.showMessageDialog(null, "Updated");
            fetchR();
            fetchC();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel d1=(DefaultTableModel)Book.getModel();
            int index=Integer.parseInt(d1.getValueAt(Book.getSelectedRow(),0).toString());
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
            String sql="DELETE FROM Bookings WHERE ID='"+index+"'";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.executeUpdate(sql);
            fetch();
            clear();
            JOptionPane.showMessageDialog(null, "Deleted");
            fetchR();
            fetchC();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        fetchR();
    }//GEN-LAST:event_showActionPerformed

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        Dashboard d=new Dashboard();
        d.show();
        dispose();
    }//GEN-LAST:event_backMouseClicked

    private void BookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1=(DefaultTableModel)Book.getModel();
        int index=Book.getSelectedRow();
        roomno.setText(d1.getValueAt(index, 1).toString());
        name.setText(d1.getValueAt(index, 2).toString());
        phone.setText(d1.getValueAt(index, 3).toString());
        address.setText(d1.getValueAt(index, 4).toString());
        if(d1.getValueAt(index,5).toString().equals("AC")){
            typ="AC";
        }
        else{
            typ="NON-AC";
        }
        if(d1.getValueAt(index,6).toString().equals("Single")){
            cat="Single";
        }else if(d1.getValueAt(index,6).toString().equals("Double")){
            cat="Double";
        }else{
            cat="FAMILY";
        }
        date.setText(d1.getValueAt(index, 7).toString());
    }//GEN-LAST:event_BookMouseClicked

    private void availMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_availMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1=(DefaultTableModel)avail.getModel();
        int index=avail.getSelectedRow();
        roomno.setText(d1.getValueAt(index, 1).toString());
        if(d1.getValueAt(index,2).toString().equals("AC")){
            typ="AC";
        }
        else{
            typ="NON-AC";
        }
        if(d1.getValueAt(index,3).toString().equals("Single")){
            cat="Single";
        }else if(d1.getValueAt(index,3).toString().equals("Double")){
            cat="Double";
        }else{
            cat="FAMILY";
        }
    }//GEN-LAST:event_availMouseClicked

    private void CusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CusMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1=(DefaultTableModel)Cus.getModel();
        int index=Cus.getSelectedRow();
        roomno.setText(d1.getValueAt(index, 1).toString());
        name.setText(d1.getValueAt(index, 2).toString());
        phone.setText(d1.getValueAt(index, 3).toString());
        address.setText(d1.getValueAt(index, 4).toString());
        date.setText(d1.getValueAt(index, 5).toString());
        if(d1.getValueAt(index,6).toString().equals("AC")){
            typ="AC";
        }
        else{
            typ="NON-AC";
        }
        if(d1.getValueAt(index,7).toString().equals("Single")){
            cat="Single";
        }else if(d1.getValueAt(index,7).toString().equals("Double")){
            cat="Double";
        }else{
            cat="FAMILY";
        }
    }//GEN-LAST:event_CusMouseClicked

    public void visiblity(){
        Customer.setVisible(false);
        show.setVisible(false);
        Change.setText("AVAILABLE ROOMS :");

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Booking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Book;
    private javax.swing.JLabel Change;
    private javax.swing.JTable Cus;
    private javax.swing.JPanel Customer;
    private javax.swing.ButtonGroup Status;
    private javax.swing.JButton add;
    private javax.swing.JTextField address;
    private javax.swing.JTable avail;
    private javax.swing.JPanel back;
    private javax.swing.ButtonGroup category;
    private javax.swing.JTextField date;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField name;
    private javax.swing.JRadioButton not;
    private javax.swing.JTextField phone;
    private javax.swing.JRadioButton res;
    private javax.swing.JTextField roomno;
    private javax.swing.JButton show;
    private javax.swing.ButtonGroup type;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables


    private void fetch() {
        try{
           Class.forName("com.mysql.cj.jdbc.Driver");
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
           String sql="select * from Bookings";
           Statement stmt=con.createStatement();
           ResultSet rs=stmt.executeQuery(sql);
           DefaultTableModel d1=(DefaultTableModel)Book.getModel();
           d1.setRowCount(0);
           while(rs.next())
           {
               
               Vector v2=new Vector();
                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("Room"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("PhnNo"));
                    v2.add(rs.getString("Address"));
                    v2.add(rs.getString("Category"));
                    v2.add(rs.getString("Type"));
                    v2.add(rs.getString("CheckIn"));
               d1.addRow(v2);
           }
       }
       catch(Exception e)
       {
           System.out.println(e);
       }
    }

    private void clear() {

        roomno.setText("");
        name.setText("");
        phone.setText("");
        this.category.clearSelection();
        this.type.clearSelection();
        date.setText("");
        address.setText("");
    }
    
    private void fetchC() {
        try{
           Class.forName("com.mysql.cj.jdbc.Driver");
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement","root","");
           String sql="select Reservation.ID,Reservation.Room,Reservation.Name,Reservation.PhnNo,Reservation.Address,Reservation.CheckIn,Rooms.Type,Rooms.Category from Reservation,Rooms,CustomerInfo where Reservation.Room=Rooms.Room && CustomerInfo.Type='RESERVED' && Reservation.Address=CustomerInfo.Address";
           Statement stmt=con.createStatement();
           ResultSet rs=stmt.executeQuery(sql);
           DefaultTableModel d1=(DefaultTableModel)Cus.getModel();
           d1.setRowCount(0);
           while(rs.next())
           {
               
               Vector v2=new Vector();
                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("Room"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("PhnNo"));
                    v2.add(rs.getString("Address"));
                    v2.add(rs.getString("CheckIn"));
                    v2.add(rs.getString("Type"));
                    v2.add(rs.getString("Category"));
               d1.addRow(v2);
           }
            System.out.println("customer");
       }
       catch(Exception e)
       {
           System.out.println(e);
       }
    }

    private void fetchR(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagement", "root", "");
            String sql="select Rooms.ID,Room,Rooms.Type,Rooms.Category,Rate from Rooms,Amount where Rooms.Availability='VACANT' && Rooms.Category=Amount.Category && Rooms.Type=Amount.Type;";
            System.out.println(sql);
            Statement st=con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            DefaultTableModel dl;
            dl = (DefaultTableModel)avail.getModel();
            dl.setRowCount(0);
            while(rs.next()){
                Vector v2=new Vector();
                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("Room"));
                    v2.add(rs.getString("Type"));
                    v2.add(rs.getString("Category"));
                    v2.add(rs.getString("Rate"));
                dl.addRow(v2);    
            }
            
        }catch(Exception e){
            System.out.println("e= "+e);
        }
    }
}
